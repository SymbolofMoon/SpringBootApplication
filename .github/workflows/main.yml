name: CI/CD Pipeline
#
on:
  push:
    branches:
      - main

#jobs:
#  build-and-test:
#    name: SpringBoot Application
#    runs-on: ubuntu-latest
#
#    steps:
#      # Step 1: Checkout code
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      # Step 2: Set up JDK
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: temurin
#
#      # Step 3: Build the application
#      - name: Build Application
#        run: mvn clean package -DskipTests
#
#      # Step 4: Run Tests
#      - name: Run Tests
#        run: mvn test
#
#  docker-build-and-deploy:
#    name: Build Docker Image and Deploy
#    runs-on: ubuntu-latest
#    needs: build-and-test
#
#    steps:
#      # Step 1: Checkout code
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      # Step 2: Log in to DockerHub
#      - name: Log in to DockerHub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      - name: List files for debugging
#        run: ls -R
#
#      # Step 3: Build Docker image
#      - name: Build Docker Image
#        run: docker build -t my-docker-repo/my-app:${{ github.sha }} .
#
#      # Step 4: Push Docker image to DockerHub
#      - name: Push Docker Image
#        run: docker push my-docker-repo/my-app:${{ github.sha }}
#
#      # Step 5: Deploy container
#      - name: Deploy Container
#        run: |
#          docker run -d --name my-app -p 8080:8080 my-docker-repo/my-app:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Build the application with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Build and push Docker image
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest

      - name: Deploy Container
        run: |
          docker run -d --name springboot-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest